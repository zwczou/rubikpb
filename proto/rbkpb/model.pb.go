// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: model.proto

package rbkpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Symbol_SymbolType int32

const (
	Symbol_TYPE_NONE    Symbol_SymbolType = 0
	Symbol_TYPE_SPOT    Symbol_SymbolType = 1
	Symbol_TYPE_FUTURES Symbol_SymbolType = 2
)

// Enum value maps for Symbol_SymbolType.
var (
	Symbol_SymbolType_name = map[int32]string{
		0: "TYPE_NONE",
		1: "TYPE_SPOT",
		2: "TYPE_FUTURES",
	}
	Symbol_SymbolType_value = map[string]int32{
		"TYPE_NONE":    0,
		"TYPE_SPOT":    1,
		"TYPE_FUTURES": 2,
	}
)

func (x Symbol_SymbolType) Enum() *Symbol_SymbolType {
	p := new(Symbol_SymbolType)
	*p = x
	return p
}

func (x Symbol_SymbolType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Symbol_SymbolType) Descriptor() protoreflect.EnumDescriptor {
	return file_model_proto_enumTypes[0].Descriptor()
}

func (Symbol_SymbolType) Type() protoreflect.EnumType {
	return &file_model_proto_enumTypes[0]
}

func (x Symbol_SymbolType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Symbol_SymbolType.Descriptor instead.
func (Symbol_SymbolType) EnumDescriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{0, 0}
}

type Symbol_FutureType int32

const (
	Symbol_FUTURE_TYPE_NONE Symbol_FutureType = 0
	Symbol_THIS_WEEK        Symbol_FutureType = 1
	Symbol_NEXT_WEEK        Symbol_FutureType = 2
	Symbol_THIS_QUARTER     Symbol_FutureType = 3
	Symbol_NEXT_QUARTER     Symbol_FutureType = 4
)

// Enum value maps for Symbol_FutureType.
var (
	Symbol_FutureType_name = map[int32]string{
		0: "FUTURE_TYPE_NONE",
		1: "THIS_WEEK",
		2: "NEXT_WEEK",
		3: "THIS_QUARTER",
		4: "NEXT_QUARTER",
	}
	Symbol_FutureType_value = map[string]int32{
		"FUTURE_TYPE_NONE": 0,
		"THIS_WEEK":        1,
		"NEXT_WEEK":        2,
		"THIS_QUARTER":     3,
		"NEXT_QUARTER":     4,
	}
)

func (x Symbol_FutureType) Enum() *Symbol_FutureType {
	p := new(Symbol_FutureType)
	*p = x
	return p
}

func (x Symbol_FutureType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Symbol_FutureType) Descriptor() protoreflect.EnumDescriptor {
	return file_model_proto_enumTypes[1].Descriptor()
}

func (Symbol_FutureType) Type() protoreflect.EnumType {
	return &file_model_proto_enumTypes[1]
}

func (x Symbol_FutureType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Symbol_FutureType.Descriptor instead.
func (Symbol_FutureType) EnumDescriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{0, 1}
}

type Symbol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        Symbol_SymbolType `protobuf:"varint,1,opt,name=type,proto3,enum=rbkpb.Symbol_SymbolType" json:"type,omitempty"`
	FutureType  Symbol_FutureType `protobuf:"varint,2,opt,name=future_type,json=futureType,proto3,enum=rbkpb.Symbol_FutureType" json:"future_type,omitempty"`
	Name        string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Base        string            `protobuf:"bytes,4,opt,name=base,proto3" json:"base,omitempty"`
	Quote       string            `protobuf:"bytes,5,opt,name=quote,proto3" json:"quote,omitempty"`
	Underlying  string            `protobuf:"bytes,6,opt,name=underlying,proto3" json:"underlying,omitempty"`
	Contract    string            `protobuf:"bytes,7,opt,name=contract,proto3" json:"contract,omitempty"`
	ContractVal float64           `protobuf:"fixed64,8,opt,name=contract_val,json=contractVal,proto3" json:"contract_val,omitempty"`
	TickSize    float64           `protobuf:"fixed64,10,opt,name=tick_size,json=tickSize,proto3" json:"tick_size,omitempty"`
	StepSize    float64           `protobuf:"fixed64,11,opt,name=step_size,json=stepSize,proto3" json:"step_size,omitempty"`
	MaxQty      float64           `protobuf:"fixed64,12,opt,name=max_qty,json=maxQty,proto3" json:"max_qty,omitempty"`
	IsInverse   bool              `protobuf:"varint,13,opt,name=is_inverse,json=isInverse,proto3" json:"is_inverse,omitempty"`
	Trading     bool              `protobuf:"varint,14,opt,name=trading,proto3" json:"trading,omitempty"`
	MaxLeverage float64           `protobuf:"fixed64,15,opt,name=max_leverage,json=maxLeverage,proto3" json:"max_leverage,omitempty"`
	DeliveryAt  int64             `protobuf:"varint,16,opt,name=delivery_at,json=deliveryAt,proto3" json:"delivery_at,omitempty"`
	ListingAt   int64             `protobuf:"varint,17,opt,name=listing_at,json=listingAt,proto3" json:"listing_at,omitempty"`
}

func (x *Symbol) Reset() {
	*x = Symbol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Symbol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Symbol) ProtoMessage() {}

func (x *Symbol) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Symbol.ProtoReflect.Descriptor instead.
func (*Symbol) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{0}
}

func (x *Symbol) GetType() Symbol_SymbolType {
	if x != nil {
		return x.Type
	}
	return Symbol_TYPE_NONE
}

func (x *Symbol) GetFutureType() Symbol_FutureType {
	if x != nil {
		return x.FutureType
	}
	return Symbol_FUTURE_TYPE_NONE
}

func (x *Symbol) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Symbol) GetBase() string {
	if x != nil {
		return x.Base
	}
	return ""
}

func (x *Symbol) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *Symbol) GetUnderlying() string {
	if x != nil {
		return x.Underlying
	}
	return ""
}

func (x *Symbol) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *Symbol) GetContractVal() float64 {
	if x != nil {
		return x.ContractVal
	}
	return 0
}

func (x *Symbol) GetTickSize() float64 {
	if x != nil {
		return x.TickSize
	}
	return 0
}

func (x *Symbol) GetStepSize() float64 {
	if x != nil {
		return x.StepSize
	}
	return 0
}

func (x *Symbol) GetMaxQty() float64 {
	if x != nil {
		return x.MaxQty
	}
	return 0
}

func (x *Symbol) GetIsInverse() bool {
	if x != nil {
		return x.IsInverse
	}
	return false
}

func (x *Symbol) GetTrading() bool {
	if x != nil {
		return x.Trading
	}
	return false
}

func (x *Symbol) GetMaxLeverage() float64 {
	if x != nil {
		return x.MaxLeverage
	}
	return 0
}

func (x *Symbol) GetDeliveryAt() int64 {
	if x != nil {
		return x.DeliveryAt
	}
	return 0
}

func (x *Symbol) GetListingAt() int64 {
	if x != nil {
		return x.ListingAt
	}
	return 0
}

type Ticker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchange    string  `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Symbol      string  `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Open        float64 `protobuf:"fixed64,3,opt,name=open,proto3" json:"open,omitempty"`
	High        float64 `protobuf:"fixed64,4,opt,name=high,proto3" json:"high,omitempty"`
	Low         float64 `protobuf:"fixed64,5,opt,name=low,proto3" json:"low,omitempty"`
	Last        float64 `protobuf:"fixed64,6,opt,name=last,proto3" json:"last,omitempty"`
	Ask         float64 `protobuf:"fixed64,7,opt,name=ask,proto3" json:"ask,omitempty"`
	Bid         float64 `protobuf:"fixed64,8,opt,name=bid,proto3" json:"bid,omitempty"`
	AskSize     float64 `protobuf:"fixed64,9,opt,name=ask_size,json=askSize,proto3" json:"ask_size,omitempty"`
	BidSize     float64 `protobuf:"fixed64,10,opt,name=bid_size,json=bidSize,proto3" json:"bid_size,omitempty"`
	Volume      float64 `protobuf:"fixed64,11,opt,name=volume,proto3" json:"volume,omitempty"`
	QuoteVolume float64 `protobuf:"fixed64,12,opt,name=quote_volume,json=quoteVolume,proto3" json:"quote_volume,omitempty"`
	Time        int64   `protobuf:"varint,13,opt,name=time,proto3" json:"time,omitempty"` // ms
}

func (x *Ticker) Reset() {
	*x = Ticker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ticker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ticker) ProtoMessage() {}

func (x *Ticker) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ticker.ProtoReflect.Descriptor instead.
func (*Ticker) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{1}
}

func (x *Ticker) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *Ticker) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Ticker) GetOpen() float64 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *Ticker) GetHigh() float64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *Ticker) GetLow() float64 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *Ticker) GetLast() float64 {
	if x != nil {
		return x.Last
	}
	return 0
}

func (x *Ticker) GetAsk() float64 {
	if x != nil {
		return x.Ask
	}
	return 0
}

func (x *Ticker) GetBid() float64 {
	if x != nil {
		return x.Bid
	}
	return 0
}

func (x *Ticker) GetAskSize() float64 {
	if x != nil {
		return x.AskSize
	}
	return 0
}

func (x *Ticker) GetBidSize() float64 {
	if x != nil {
		return x.BidSize
	}
	return 0
}

func (x *Ticker) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *Ticker) GetQuoteVolume() float64 {
	if x != nil {
		return x.QuoteVolume
	}
	return 0
}

func (x *Ticker) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type Candle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchange    string  `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Symbol      string  `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Period      string  `protobuf:"bytes,3,opt,name=period,proto3" json:"period,omitempty"`
	Open        float64 `protobuf:"fixed64,4,opt,name=open,proto3" json:"open,omitempty"`
	High        float64 `protobuf:"fixed64,5,opt,name=high,proto3" json:"high,omitempty"`
	Low         float64 `protobuf:"fixed64,6,opt,name=low,proto3" json:"low,omitempty"`
	Close       float64 `protobuf:"fixed64,7,opt,name=close,proto3" json:"close,omitempty"`
	Volume      float64 `protobuf:"fixed64,8,opt,name=volume,proto3" json:"volume,omitempty"`
	QuoteVolume float64 `protobuf:"fixed64,9,opt,name=quote_volume,json=quoteVolume,proto3" json:"quote_volume,omitempty"`
	Count       uint32  `protobuf:"varint,10,opt,name=count,proto3" json:"count,omitempty"`
	Time        uint32  `protobuf:"varint,11,opt,name=time,proto3" json:"time,omitempty"` // s
}

func (x *Candle) Reset() {
	*x = Candle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Candle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Candle) ProtoMessage() {}

func (x *Candle) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Candle.ProtoReflect.Descriptor instead.
func (*Candle) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{2}
}

func (x *Candle) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *Candle) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Candle) GetPeriod() string {
	if x != nil {
		return x.Period
	}
	return ""
}

func (x *Candle) GetOpen() float64 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *Candle) GetHigh() float64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *Candle) GetLow() float64 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *Candle) GetClose() float64 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *Candle) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *Candle) GetQuoteVolume() float64 {
	if x != nil {
		return x.QuoteVolume
	}
	return 0
}

func (x *Candle) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Candle) GetTime() uint32 {
	if x != nil {
		return x.Time
	}
	return 0
}

var File_model_proto protoreflect.FileDescriptor

var file_model_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x72,
	0x62, 0x6b, 0x70, 0x62, 0x22, 0xa1, 0x05, 0x0a, 0x06, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12,
	0x2c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e,
	0x72, 0x62, 0x6b, 0x70, 0x62, 0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x2e, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a,
	0x0b, 0x66, 0x75, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x18, 0x2e, 0x72, 0x62, 0x6b, 0x70, 0x62, 0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x2e, 0x46, 0x75, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x66, 0x75,
	0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x62, 0x61, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c,
	0x79, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x6e, 0x64, 0x65,
	0x72, 0x6c, 0x79, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x76,
	0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x56, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x65, 0x70, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x73, 0x74, 0x65, 0x70, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x06, 0x6d, 0x61, 0x78, 0x51, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x69,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73,
	0x49, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x72, 0x61, 0x67,
	0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x4c, 0x65, 0x76, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x5f, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x61, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x41, 0x74, 0x22, 0x3c, 0x0a, 0x0a, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x50, 0x4f, 0x54, 0x10, 0x01,
	0x12, 0x10, 0x0a, 0x0c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x55, 0x54, 0x55, 0x52, 0x45, 0x53,
	0x10, 0x02, 0x22, 0x64, 0x0a, 0x0a, 0x46, 0x75, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x10, 0x46, 0x55, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x48, 0x49, 0x53, 0x5f, 0x57,
	0x45, 0x45, 0x4b, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x45, 0x58, 0x54, 0x5f, 0x57, 0x45,
	0x45, 0x4b, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x48, 0x49, 0x53, 0x5f, 0x51, 0x55, 0x41,
	0x52, 0x54, 0x45, 0x52, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x4e, 0x45, 0x58, 0x54, 0x5f, 0x51,
	0x55, 0x41, 0x52, 0x54, 0x45, 0x52, 0x10, 0x04, 0x22, 0xb3, 0x02, 0x0a, 0x06, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x69, 0x67, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68, 0x12,
	0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6f,
	0x77, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x04, 0x6c, 0x61, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x73, 0x6b, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x03, 0x61, 0x73, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x62, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x6b,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x61, 0x73, 0x6b,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x69, 0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x62, 0x69, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x71,
	0x75, 0x6f, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x89,
	0x02, 0x0a, 0x06, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x67,
	0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68, 0x12, 0x10, 0x0a,
	0x03, 0x6c, 0x6f, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6f, 0x77, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0b, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x27, 0x5a, 0x25, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x7a, 0x77, 0x63, 0x7a, 0x6f, 0x75, 0x2f,
	0x72, 0x75, 0x62, 0x69, 0x6b, 0x70, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x62,
	0x6b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_model_proto_rawDescOnce sync.Once
	file_model_proto_rawDescData = file_model_proto_rawDesc
)

func file_model_proto_rawDescGZIP() []byte {
	file_model_proto_rawDescOnce.Do(func() {
		file_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_model_proto_rawDescData)
	})
	return file_model_proto_rawDescData
}

var file_model_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_model_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_model_proto_goTypes = []interface{}{
	(Symbol_SymbolType)(0), // 0: rbkpb.Symbol.SymbolType
	(Symbol_FutureType)(0), // 1: rbkpb.Symbol.FutureType
	(*Symbol)(nil),         // 2: rbkpb.Symbol
	(*Ticker)(nil),         // 3: rbkpb.Ticker
	(*Candle)(nil),         // 4: rbkpb.Candle
}
var file_model_proto_depIdxs = []int32{
	0, // 0: rbkpb.Symbol.type:type_name -> rbkpb.Symbol.SymbolType
	1, // 1: rbkpb.Symbol.future_type:type_name -> rbkpb.Symbol.FutureType
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_model_proto_init() }
func file_model_proto_init() {
	if File_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Symbol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ticker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Candle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_model_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_model_proto_goTypes,
		DependencyIndexes: file_model_proto_depIdxs,
		EnumInfos:         file_model_proto_enumTypes,
		MessageInfos:      file_model_proto_msgTypes,
	}.Build()
	File_model_proto = out.File
	file_model_proto_rawDesc = nil
	file_model_proto_goTypes = nil
	file_model_proto_depIdxs = nil
}
